# ensure table ip plug2proxy exists
table ip plug2proxy {}

flush table ip plug2proxy

define excluding_nets = {
    10.0.0.0/8,
    100.64.0.0/10,
    127.0.0.0/8,
    169.254.0.0/16,
    172.16.0.0/12,
    192.0.0.0/24,
    192.168.0.0/16,
    224.0.0.0/4,
    240.0.0.0/4,
    255.255.255.255/32
}
define proxy_traffic_mark = 0x000000ff
define tproxy_mark = 0x00000001
define tproxy_ip = 127.0.0.1
define tproxy_port = 12345

table ip plug2proxy {
    chain output {
        type route hook output priority filter; policy accept;
        ip daddr $excluding_nets return
        meta mark $proxy_traffic_mark return
        meta l4proto tcp meta mark set $tproxy_mark accept
    }

    chain prerouting {
        type filter hook prerouting priority filter; policy accept;
        ip daddr $excluding_nets return
        meta mark $proxy_traffic_mark return
        meta l4proto tcp tproxy to $tproxy_ip:$tproxy_port meta mark set $tproxy_mark accept
    }

    chain divert {
        type filter hook prerouting priority mangle; policy accept;
        meta l4proto tcp socket transparent 1 meta mark set $tproxy_mark accept
    }
}
